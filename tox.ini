[tox]
min_version = 3.28.0
isolated_build = True
envlist =
    py{38, 39, 310, 311, 312},
    lint,
    docs,
    ;  typing,
    ; build,
    codespell

; [tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
skip_install = true
allowlist_externals = make
deps =
    -e .[all]
    pytest >= 6.2.5
    jupyter
commands = pytest {posargs} -v --basetemp="{envtmpdir}" --log-level=DEBUG

[testenv:lint]
skip_install = true
deps =
    pre-commit == 2.15.0
commands =
    pre-commit install
    pre-commit run --all-files

[testenv:docs]
requires = python >= 3.8
changedir = docs
deps =
    sphinx # extras = ["autdoc", "autosummary", "intersphinx", "napoleon", "viewcode"]
    sphinx-autodoc-typehints
    sphinx-rtd-theme >=1.1.1
    nbsphinx
    nbsphinx-link
    doc8
    rstcheck
    pandoc
    ipython
commands =
    make clean html
    python ../check_docs.py

; [testenv:typing]
; description = run type checks
; deps =
;     mypy >= 0.991
; commands =
;     mypy {posargs:lightautoml tests}

; [testenv:build]
; skip_install = true
; deps =
;     poetry >= 1.1.7
; commands =
;     poetry run python scripts/poetry_fix.py -f
;     poetry build

[testenv:codespell]
skip_install = true
deps =
    codespell
commands =
    codespell --skip="docs,_build,imgs"

# example:
# tox -e exp -- --dataset_project=Datasets_with_metadata --tags=binary openml
# tox -e exp -- --dataset_project=Datasets_with_metadata --dataset=CIFAR_10_openml --queue=gpu_queue
# tox -e exp -- --dataset_project=Datasets_with_metadata --tags=multiclass --queue=gpu_queue --n_datasets=5 --name=mlp --min_num_obs=100000
# Notion: args [--tags=binary openml] means tag is binary OR tag is openml
[testenv:exp]
deps =
    clearml
    pandas
    numpy
commands =
    python scripts/experiments/run.py {posargs}

[testenv:exp_bonus]
deps =
    -e .[all]
    clearml
commands =
    python scripts/experiments/run.py {posargs}
